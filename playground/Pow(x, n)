from functools import lru_cache


class Solution:

    def myPow(self, x: float, n: int) -> float:
        if n < 0:
            return self.power(1/x, 1/x, -n)
        else:
            return self.power(x, x, n)

    @lru_cache
    def power(self, base, x, n):
        if n == 1:
            return x
        return self.power(base, x*base, n-1)


sol = Solution()

print(sol.myPow(0.00001, 2147483647))
